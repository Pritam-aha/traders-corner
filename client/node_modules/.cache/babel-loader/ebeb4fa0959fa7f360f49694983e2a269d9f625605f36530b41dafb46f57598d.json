{"ast":null,"code":"var _jsxFileName = \"E:\\\\project 3\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AllIndexes from './components/AllIndexes';\nimport Header from './components/Header';\nimport MarketOverview from './components/MarketOverview';\nimport MarketStatus from './components/MarketStatus';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('overview');\n  const [marketData, setMarketData] = useState({\n    majorIndexes: [],\n    sectorIndexes: [],\n    marketStats: {\n      total: 0,\n      gainers: 0,\n      losers: 0,\n      avgChange: '0.00'\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Fetch market data from backend\n  const fetchMarketData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/market-data');\n      const data = await response.json();\n      if (data.success) {\n        setMarketData(data.data);\n        setLastUpdate(new Date());\n        showNotification('Data updated successfully!', 'success');\n      } else {\n        throw new Error(data.message || 'Failed to fetch data');\n      }\n    } catch (error) {\n      console.error('Error fetching market data:', error);\n      showNotification('Failed to fetch market data. Using simulated data.', 'warning');\n\n      // Fallback to simulated data\n      const simulatedData = generateSimulatedData();\n      setMarketData(simulatedData);\n      setLastUpdate(new Date());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate simulated data for fallback\n  const generateSimulatedData = () => {\n    const majorIndexes = [{\n      symbol: 'NIFTY50',\n      name: 'NIFTY 50',\n      price: 19500 + Math.random() * 500,\n      change: (Math.random() - 0.5) * 200,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 19500,\n      type: 'major',\n      logo: 'nifty-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'SENSEX',\n      name: 'S&P BSE SENSEX',\n      price: 65000 + Math.random() * 2000,\n      change: (Math.random() - 0.5) * 600,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 65000,\n      type: 'major',\n      logo: 'sensex-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'BANKNIFTY',\n      name: 'NIFTY BANK',\n      price: 44000 + Math.random() * 1000,\n      change: (Math.random() - 0.5) * 300,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 44000,\n      type: 'major',\n      logo: 'bank-logo',\n      source: 'Simulated'\n    }];\n    const sectorIndexes = [{\n      symbol: 'NIFTYIT',\n      name: 'NIFTY IT',\n      price: 32000 + Math.random() * 2000,\n      change: (Math.random() - 0.5) * 400,\n      changePercent: (Math.random() - 0.5) * 3,\n      previousClose: 32000,\n      type: 'sector',\n      logo: 'it-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYPHARMA',\n      name: 'NIFTY PHARMA',\n      price: 12000 + Math.random() * 1000,\n      change: (Math.random() - 0.5) * 200,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 12000,\n      type: 'sector',\n      logo: 'pharma-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYAUTO',\n      name: 'NIFTY AUTO',\n      price: 18000 + Math.random() * 1500,\n      change: (Math.random() - 0.5) * 300,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 18000,\n      type: 'sector',\n      logo: 'auto-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYFMCG',\n      name: 'NIFTY FMCG',\n      price: 50000 + Math.random() * 3000,\n      change: (Math.random() - 0.5) * 500,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 50000,\n      type: 'sector',\n      logo: 'fmcg-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYMETAL',\n      name: 'NIFTY METAL',\n      price: 7000 + Math.random() * 800,\n      change: (Math.random() - 0.5) * 150,\n      changePercent: (Math.random() - 0.5) * 3,\n      previousClose: 7000,\n      type: 'sector',\n      logo: 'metal-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYREALTY',\n      name: 'NIFTY REALTY',\n      price: 450 + Math.random() * 50,\n      change: (Math.random() - 0.5) * 10,\n      changePercent: (Math.random() - 0.5) * 4,\n      previousClose: 450,\n      type: 'sector',\n      logo: 'realty-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYPSUBANK',\n      name: 'NIFTY PSU BANK',\n      price: 4000 + Math.random() * 400,\n      change: (Math.random() - 0.5) * 100,\n      changePercent: (Math.random() - 0.5) * 3,\n      previousClose: 4000,\n      type: 'sector',\n      logo: 'psu-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYPVTBANK',\n      name: 'NIFTY PVT BANK',\n      price: 22000 + Math.random() * 2000,\n      change: (Math.random() - 0.5) * 400,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 22000,\n      type: 'sector',\n      logo: 'private-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYFIN',\n      name: 'NIFTY FIN SERVICE',\n      price: 19000 + Math.random() * 1500,\n      change: (Math.random() - 0.5) * 300,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 19000,\n      type: 'sector',\n      logo: 'fin-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYENERGY',\n      name: 'NIFTY ENERGY',\n      price: 25000 + Math.random() * 2000,\n      change: (Math.random() - 0.5) * 400,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 25000,\n      type: 'sector',\n      logo: 'energy-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYINFRA',\n      name: 'NIFTY INFRA',\n      price: 3500 + Math.random() * 300,\n      change: (Math.random() - 0.5) * 80,\n      changePercent: (Math.random() - 0.5) * 3,\n      previousClose: 3500,\n      type: 'sector',\n      logo: 'infra-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYCONSUMER',\n      name: 'NIFTY CONSUMER',\n      price: 8500 + Math.random() * 600,\n      change: (Math.random() - 0.5) * 120,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 8500,\n      type: 'sector',\n      logo: 'consumer-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYMEDIA',\n      name: 'NIFTY MEDIA',\n      price: 1800 + Math.random() * 200,\n      change: (Math.random() - 0.5) * 40,\n      changePercent: (Math.random() - 0.5) * 4,\n      previousClose: 1800,\n      type: 'sector',\n      logo: 'media-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYOIL',\n      name: 'NIFTY OIL & GAS',\n      price: 9000 + Math.random() * 800,\n      change: (Math.random() - 0.5) * 160,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 9000,\n      type: 'sector',\n      logo: 'oil-logo',\n      source: 'Simulated'\n    }, {\n      symbol: 'NIFTYHEALTH',\n      name: 'NIFTY HEALTHCARE',\n      price: 11000 + Math.random() * 1000,\n      change: (Math.random() - 0.5) * 200,\n      changePercent: (Math.random() - 0.5) * 2,\n      previousClose: 11000,\n      type: 'sector',\n      logo: 'health-logo',\n      source: 'Simulated'\n    }];\n\n    // Calculate market stats\n    const allIndexes = [...majorIndexes, ...sectorIndexes];\n    const gainers = allIndexes.filter(index => index.change >= 0).length;\n    const losers = allIndexes.filter(index => index.change < 0).length;\n    const avgChange = (allIndexes.reduce((sum, index) => sum + index.changePercent, 0) / allIndexes.length).toFixed(2);\n    return {\n      majorIndexes,\n      sectorIndexes,\n      marketStats: {\n        total: allIndexes.length,\n        gainers,\n        losers,\n        avgChange\n      }\n    };\n  };\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 5000);\n  };\n  const handleRefresh = () => {\n    fetchMarketData();\n  };\n  useEffect(() => {\n    fetchMarketData();\n\n    // Set up auto-refresh every 5 minutes\n    const interval = setInterval(fetchMarketData, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(MarketOverview, {\n          majorIndexes: marketData.majorIndexes,\n          sectorIndexes: marketData.sectorIndexes,\n          marketStats: marketData.marketStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this);\n      case 'all-indexes':\n        return /*#__PURE__*/_jsxDEV(AllIndexes, {\n          majorIndexes: marketData.majorIndexes,\n          sectorIndexes: marketData.sectorIndexes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this);\n      case 'market-status':\n        return /*#__PURE__*/_jsxDEV(MarketStatus, {\n          majorIndexes: marketData.majorIndexes,\n          sectorIndexes: marketData.sectorIndexes,\n          lastUpdate: lastUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this);\n      case 'statistics':\n        return /*#__PURE__*/_jsxDEV(Statistics, {\n          majorIndexes: marketData.majorIndexes,\n          sectorIndexes: marketData.sectorIndexes,\n          marketStats: marketData.marketStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(MarketOverview, {\n          majorIndexes: marketData.majorIndexes,\n          sectorIndexes: marketData.sectorIndexes,\n          marketStats: marketData.marketStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentView: currentView,\n      setCurrentView: setCurrentView,\n      onRefresh: handleRefresh,\n      isLoading: isLoading,\n      lastUpdate: lastUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: renderCurrentView()\n        }, currentView, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type,\n      onClose: () => setNotification(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"86tIiVBej7je0ivu+AyJ1m+vkYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AnimatePresence","motion","React","useEffect","useState","AllIndexes","Header","MarketOverview","MarketStatus","Notification","Statistics","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","marketData","setMarketData","majorIndexes","sectorIndexes","marketStats","total","gainers","losers","avgChange","isLoading","setIsLoading","notification","setNotification","lastUpdate","setLastUpdate","fetchMarketData","response","fetch","data","json","success","Date","showNotification","Error","message","error","console","simulatedData","generateSimulatedData","symbol","name","price","Math","random","change","changePercent","previousClose","type","logo","source","allIndexes","filter","index","length","reduce","sum","toFixed","setTimeout","handleRefresh","interval","setInterval","clearInterval","renderCurrentView","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onRefresh","mode","div","initial","opacity","y","animate","exit","transition","duration","onClose","_c","$RefreshReg$"],"sources":["E:/project 3/client/src/App.js"],"sourcesContent":["import { AnimatePresence, motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AllIndexes from './components/AllIndexes';\nimport Header from './components/Header';\nimport MarketOverview from './components/MarketOverview';\nimport MarketStatus from './components/MarketStatus';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('overview');\n  const [marketData, setMarketData] = useState({\n    majorIndexes: [],\n    sectorIndexes: [],\n    marketStats: {\n      total: 0,\n      gainers: 0,\n      losers: 0,\n      avgChange: '0.00'\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Fetch market data from backend\n  const fetchMarketData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/market-data');\n      const data = await response.json();\n      \n      if (data.success) {\n        setMarketData(data.data);\n        setLastUpdate(new Date());\n        showNotification('Data updated successfully!', 'success');\n      } else {\n        throw new Error(data.message || 'Failed to fetch data');\n      }\n    } catch (error) {\n      console.error('Error fetching market data:', error);\n      showNotification('Failed to fetch market data. Using simulated data.', 'warning');\n      \n      // Fallback to simulated data\n      const simulatedData = generateSimulatedData();\n      setMarketData(simulatedData);\n      setLastUpdate(new Date());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate simulated data for fallback\n  const generateSimulatedData = () => {\n    const majorIndexes = [\n      {\n        symbol: 'NIFTY50',\n        name: 'NIFTY 50',\n        price: 19500 + Math.random() * 500,\n        change: (Math.random() - 0.5) * 200,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 19500,\n        type: 'major',\n        logo: 'nifty-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'SENSEX',\n        name: 'S&P BSE SENSEX',\n        price: 65000 + Math.random() * 2000,\n        change: (Math.random() - 0.5) * 600,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 65000,\n        type: 'major',\n        logo: 'sensex-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'BANKNIFTY',\n        name: 'NIFTY BANK',\n        price: 44000 + Math.random() * 1000,\n        change: (Math.random() - 0.5) * 300,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 44000,\n        type: 'major',\n        logo: 'bank-logo',\n        source: 'Simulated'\n      }\n    ];\n\n    const sectorIndexes = [\n      {\n        symbol: 'NIFTYIT',\n        name: 'NIFTY IT',\n        price: 32000 + Math.random() * 2000,\n        change: (Math.random() - 0.5) * 400,\n        changePercent: (Math.random() - 0.5) * 3,\n        previousClose: 32000,\n        type: 'sector',\n        logo: 'it-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYPHARMA',\n        name: 'NIFTY PHARMA',\n        price: 12000 + Math.random() * 1000,\n        change: (Math.random() - 0.5) * 200,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 12000,\n        type: 'sector',\n        logo: 'pharma-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYAUTO',\n        name: 'NIFTY AUTO',\n        price: 18000 + Math.random() * 1500,\n        change: (Math.random() - 0.5) * 300,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 18000,\n        type: 'sector',\n        logo: 'auto-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYFMCG',\n        name: 'NIFTY FMCG',\n        price: 50000 + Math.random() * 3000,\n        change: (Math.random() - 0.5) * 500,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 50000,\n        type: 'sector',\n        logo: 'fmcg-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYMETAL',\n        name: 'NIFTY METAL',\n        price: 7000 + Math.random() * 800,\n        change: (Math.random() - 0.5) * 150,\n        changePercent: (Math.random() - 0.5) * 3,\n        previousClose: 7000,\n        type: 'sector',\n        logo: 'metal-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYREALTY',\n        name: 'NIFTY REALTY',\n        price: 450 + Math.random() * 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 4,\n        previousClose: 450,\n        type: 'sector',\n        logo: 'realty-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYPSUBANK',\n        name: 'NIFTY PSU BANK',\n        price: 4000 + Math.random() * 400,\n        change: (Math.random() - 0.5) * 100,\n        changePercent: (Math.random() - 0.5) * 3,\n        previousClose: 4000,\n        type: 'sector',\n        logo: 'psu-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYPVTBANK',\n        name: 'NIFTY PVT BANK',\n        price: 22000 + Math.random() * 2000,\n        change: (Math.random() - 0.5) * 400,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 22000,\n        type: 'sector',\n        logo: 'private-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYFIN',\n        name: 'NIFTY FIN SERVICE',\n        price: 19000 + Math.random() * 1500,\n        change: (Math.random() - 0.5) * 300,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 19000,\n        type: 'sector',\n        logo: 'fin-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYENERGY',\n        name: 'NIFTY ENERGY',\n        price: 25000 + Math.random() * 2000,\n        change: (Math.random() - 0.5) * 400,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 25000,\n        type: 'sector',\n        logo: 'energy-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYINFRA',\n        name: 'NIFTY INFRA',\n        price: 3500 + Math.random() * 300,\n        change: (Math.random() - 0.5) * 80,\n        changePercent: (Math.random() - 0.5) * 3,\n        previousClose: 3500,\n        type: 'sector',\n        logo: 'infra-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYCONSUMER',\n        name: 'NIFTY CONSUMER',\n        price: 8500 + Math.random() * 600,\n        change: (Math.random() - 0.5) * 120,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 8500,\n        type: 'sector',\n        logo: 'consumer-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYMEDIA',\n        name: 'NIFTY MEDIA',\n        price: 1800 + Math.random() * 200,\n        change: (Math.random() - 0.5) * 40,\n        changePercent: (Math.random() - 0.5) * 4,\n        previousClose: 1800,\n        type: 'sector',\n        logo: 'media-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYOIL',\n        name: 'NIFTY OIL & GAS',\n        price: 9000 + Math.random() * 800,\n        change: (Math.random() - 0.5) * 160,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 9000,\n        type: 'sector',\n        logo: 'oil-logo',\n        source: 'Simulated'\n      },\n      {\n        symbol: 'NIFTYHEALTH',\n        name: 'NIFTY HEALTHCARE',\n        price: 11000 + Math.random() * 1000,\n        change: (Math.random() - 0.5) * 200,\n        changePercent: (Math.random() - 0.5) * 2,\n        previousClose: 11000,\n        type: 'sector',\n        logo: 'health-logo',\n        source: 'Simulated'\n      }\n    ];\n\n    // Calculate market stats\n    const allIndexes = [...majorIndexes, ...sectorIndexes];\n    const gainers = allIndexes.filter(index => index.change >= 0).length;\n    const losers = allIndexes.filter(index => index.change < 0).length;\n    const avgChange = (allIndexes.reduce((sum, index) => sum + index.changePercent, 0) / allIndexes.length).toFixed(2);\n\n    return {\n      majorIndexes,\n      sectorIndexes,\n      marketStats: {\n        total: allIndexes.length,\n        gainers,\n        losers,\n        avgChange\n      }\n    };\n  };\n\n  const showNotification = (message, type = 'info') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  const handleRefresh = () => {\n    fetchMarketData();\n  };\n\n  useEffect(() => {\n    fetchMarketData();\n    \n    // Set up auto-refresh every 5 minutes\n    const interval = setInterval(fetchMarketData, 5 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'overview':\n        return (\n          <MarketOverview \n            majorIndexes={marketData.majorIndexes}\n            sectorIndexes={marketData.sectorIndexes}\n            marketStats={marketData.marketStats}\n          />\n        );\n      case 'all-indexes':\n        return (\n          <AllIndexes \n            majorIndexes={marketData.majorIndexes}\n            sectorIndexes={marketData.sectorIndexes}\n          />\n        );\n      case 'market-status':\n        return (\n          <MarketStatus \n            majorIndexes={marketData.majorIndexes}\n            sectorIndexes={marketData.sectorIndexes}\n            lastUpdate={lastUpdate}\n          />\n        );\n      case 'statistics':\n        return (\n          <Statistics \n            majorIndexes={marketData.majorIndexes}\n            sectorIndexes={marketData.sectorIndexes}\n            marketStats={marketData.marketStats}\n          />\n        );\n      default:\n        return (\n          <MarketOverview \n            majorIndexes={marketData.majorIndexes}\n            sectorIndexes={marketData.sectorIndexes}\n            marketStats={marketData.marketStats}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header \n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        onRefresh={handleRefresh}\n        isLoading={isLoading}\n        lastUpdate={lastUpdate}\n      />\n      \n      <main className=\"main-content\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentView}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n          >\n            {renderCurrentView()}\n          </motion.div>\n        </AnimatePresence>\n      </main>\n\n      {notification && (\n        <Notification \n          message={notification.message}\n          type={notification.type}\n          onClose={() => setNotification(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}